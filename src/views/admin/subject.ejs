<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/css/icon.css" />
    <link rel="stylesheet" href="/css/styles.css" />
    <script src="/js/jquery.min.js"></script>
    <script src="/js/popper.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <style>
      * {
        box-sizing: border-box;
      }

      body {
        font: 16px Arial;
      }

      /*the container must be positioned relative:*/
      .autocomplete {
        position: relative;
        display: inline-block;
      }

      input {
        border: 1px solid transparent;
        background-color: #f1f1f1;
        padding: 10px;
        font-size: 16px;
      }

      input[type="text"] {
        background-color: #f1f1f1;
        width: 100%;
      }

      input[type="submit"] {
        background-color: DodgerBlue;
        color: #fff;
        cursor: pointer;
      }

      .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 0;
        right: 0;
      }

      .autocomplete-items div {
        padding: 10px;
        cursor: pointer;
        background-color: #fff;
        border-bottom: 1px solid #d4d4d4;
      }

      /*when hovering an item:*/
      .autocomplete-items div:hover {
        background-color: #e9e9e9;
      }

      /*when navigating through the items using the arrow keys:*/
      .autocomplete-active {
        background-color: DodgerBlue !important;
        color: #ffffff;
      }
    </style>
  </head>
  <body>
    <%- include('../partials/nav_admin.ejs') %>
    <div class="container">
      <div class="row container">
        <!-- Title page -->
        <h2 class="text-primary">Subject List</h2>
        <a href="#addSubject" data-toggle="modal">
          <span
            class="badge badge-pill badge-primary"
            style="background-color: white;"
            ><i style="color: blue;" class="fas fa-plus"></i></span
        ></a>
      </div>
      <!-- Table list subject -->
      <!-- Search -->
      <div class="container row justify-content-center align-items-center">
        <div class="autocomplete col-10">
          <input
            class="form-control"
            id="searchInput"
            type="text"
            style="margin-right: 5px;"
            placeholder="Search by name..."
          />
        </div>
        <a href="#" id="filter" class="col-1 btn btn-primary">Search</a>
      </div>
      <table style="margin-top: 10px;" class="table table-bordered table-hover">
        <!-- Header table -->
        <thead class="thead-dark">
          <tr>
            <th>STT</th>
            <th>ID</th>
            <th>NAME</th>
            <th>CREDITS</th>
            <th>Edit</th>
            <th>Delete</th>
          </tr>
        </thead>
        <!-- Body table -->
        <tbody>
          <% data.forEach((item,index)=>{%>
          <tr>
            <td><%-(index + 1)%></td>
            <td><%-item.subjectID%></td>
            <td><%-item.name%></td>
            <td><%-item.credits%></td>
            <td>
              <a
                href="#editSubject"
                class="btnEdit"
                data-toggle="modal"
                index="<%-index%>"
                ><i style="color: red;" class="fas fa-edit"></i
              ></a>
            </td>
            <td>
              <a
                href="#deleteSubject"
                class="btnDelete"
                data-toggle="modal"
                index="<%-index%>"
              >
                <i style="color: red;" class="fas fa-archive"></i
              ></a>
            </td>
          </tr>
          <%});%>
        </tbody>
      </table>

      <!-- Pagination table -->
      <div class="container">
        <ul class="pagination float-right">
          <li class="page-item">
            <a id="prev" class="page-link" href="#">Previous</a>
          </li>
          <% for(var i = 0; i < maxPage; i++){ var active = (i==(page-1))?
          "active": "" ; %>
          <li class="page-item <%-active%>">
            <a class="page-link" href="/admin/subject?page=<%-(i+1)%>"
              ><%-(i+1)%></a
            >
          </li>
          <% };%>
          <li class="page-item">
            <a id="next" class="page-link" href="#">Next</a>
          </li>
        </ul>
      </div>
    </div>
    <!-- Modal add subject -->
    <div class="modal" id="addSubject">
      <div class="modal-dialog">
        <div class="modal-content">
          <!-- Modal Header -->
          <div class="modal-header">
            <h4 class="modal-title text-primary">ADD SUBJECT</h4>
            <button type="button" class="close" data-dismiss="modal">
              &times;
            </button>
          </div>
          <!-- Modal body -->
          <div class="modal-body">
            <!-- Form add subject -->
            <form action="/admin/subject/add" method="POST">
              <!-- Subject id -->
              <label for="subjectID">Subject ID:</label>
              <input
                type="text"
                class="form-control"
                name="subjectID"
                placeholder="Enter ID "
                required
              />
              <!-- Subject name -->
              <label for="name">Subject Name:</label>
              <input
                type="text"
                class="form-control"
                placeholder="Enter name"
                name="name"
                required
              />
              <!-- Subject credits -->
              <label for="credits">Subject credits:</label>
              <input
                type="number"
                class="form-control"
                placeholder="Enter credits"
                name="credits"
                max="5"
                min="2"
                required
              />

              <!-- Action for form -->
              <div
                class="row justify-content-center align-items-center"
                style="margin-top: 20px;"
              >
                <button type="submit" class="btn btn-primary col-3">
                  Submit
                </button>
                <button
                  type="reset"
                  style="margin-left: 20px; margin-right: 20px;"
                  class="btn btn-primary col-3"
                >
                  Clear
                </button>
                <button
                  type="button"
                  class="btn btn-primary col-3"
                  data-dismiss="modal"
                >
                  Close
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
    <!-- Modal edit subject -->
    <div class="modal" id="editSubject">
      <div class="modal-dialog">
        <div class="modal-content">
          <!-- Modal Header -->
          <div class="modal-header">
            <h4 class="modal-title text-primary">EDIT SUBJECT</h4>
            <button type="button" class="close" data-dismiss="modal">
              &times;
            </button>
          </div>
          <!-- Modal body -->
          <div class="modal-body">
            <!-- Form Edit subject -->
            <form action="#" id="formEdit" method="POST">
              <!-- Subject id -->
              <label for="subjectID">Subject ID:</label>
              <input
                type="text"
                class="form-control"
                name="subjectID"
                placeholder="Enter ID"
                id="subjectID"
                required
              />
              <!-- Subject name -->
              <label for="name">Subject Name:</label>
              <input
                type="text"
                class="form-control"
                placeholder="Enter name"
                id="subjectName"
                name="name"
                required
              />
              <!-- Subject credits -->
              <label for="credits">Subject credits:</label>
              <input
                type="number"
                class="form-control"
                placeholder="Enter credits"
                name="credits"
                id="subjectCredits"
                max="5"
                min="2"
                required
              />

              <!-- Action for form -->
              <div
                class="row justify-content-center align-items-center"
                style="margin-top: 20px;"
              >
                <button
                  type="submit"
                  id="submitEdit"
                  class="btn btn-primary col-3"
                >
                  Submit
                </button>
                <button
                  type="reset"
                  style="margin-left: 20px; margin-right: 20px;"
                  class="btn btn-primary col-3"
                >
                  Clear
                </button>
                <button
                  type="button"
                  class="btn btn-primary col-3"
                  data-dismiss="modal"
                >
                  Close
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
    <!-- Model delete subject -->
    <div class="modal" id="deleteSubject">
      <div class="modal-dialog">
        <div class="modal-content">
          <!-- Modal Header -->
          <div class="modal-header">
            <h4 class="modal-title text-danger">DELETE SUBJECT</h4>
            <br />
            <button type="button" class="close" data-dismiss="modal">
              &times;
            </button>
          </div>

          <!-- Modal body -->
          <P
            style="text-align: center; margin-left: 10px; margin-right: 10px;"
            class="text-danger"
            id="deleteContent"
          ></P>
          <div
            style="margin-bottom: 10px;"
            class="row justify-content-center align-items-center"
          >
            <a
              style="margin-right: 10px;"
              id="submitDelete"
              class="btn btn-danger col-3"
            >
              DELETE
            </a>
            <a type="button" class="btn btn-danger col-3" data-dismiss="modal">
              Close
            </a>
          </div>
        </div>
      </div>
    </div>
    <script>
            $(document).ready(() => {
              var page = <%-page%>;
              var maxPage = <%-maxPage%>;
              var data = <%-JSON.stringify(data)%>;
              var subjectName = <%-JSON.stringify(subjectName)%>;
              var next = $("#next");
              var prev = $("#prev");
              var btnEdit = $(".btnEdit");
              var btnDelete = $(".btnDelete");
              var submitDelete = $("#submitDelete");
              var deleteContent = $("#deleteContent");
              var formEdit = $("#formEdit");
              var filter = $("#filter");
              var searchInput = $("#searchInput");
              var subjectDelete;
              // Next page
              next.click(() => {
                   page +=1 ;
                  if(page>maxPage) page = maxPage;
                  next.attr("href","/admin/subject?page=" + page);
              });
              // Prev Page
              prev.click(()=>{
                page -= 1;
                if(page<0) page = 0;
                prev.attr("href","/admin/subject?page=" + page);
              });
              // Handle edit
              btnEdit.each(function(){
                $(this).click(function(){
                  var index = $(this).attr("index") ;
                  var subject = data[index];
                  $("#subjectID").val(subject.subjectID);
                  $("#subjectName").val(subject.name);
                  $("#subjectCredits").val(subject.credits);
                  formEdit.attr("action","/admin/subject/edit/" + subject._id +"?currentPage=" + page);
                })
              })
              // Handle delete subject
              btnDelete.each(function(){
               $(this).click(function(){
                var index = $(this).attr("index")  ;
                subjectDelete = data[index];
                deleteContent.text("Are you sure you wan to delete subject: " + subjectDelete.name +
                " with ID: " + subjectDelete.subjectID + " ? You can not recovery this subject!" );
               })
              })
              // Delete
              submitDelete.click(()=>{
                submitDelete.attr("href","/admin/subject/delete/" + subjectDelete._id + "?currentPage=" + page);
              })
              // Filter
              filter.click(function(){
                $(this).attr('href','/admin/subject?name='+ searchInput.val())
                console.log($(this).attr('href'));
                
              })
              /*------Auto complete------*/
              function autocomplete(inp, arr) {
        /*the autocomplete function takes two arguments,
        the text field element and an array of possible autocompleted values:*/
        var currentFocus;
        /*execute a function when someone writes in the text field:*/
        inp.addEventListener("input", function(e) {
            var a, b, i, val = this.value;
            /*close any already open lists of autocompleted values*/
            closeAllLists();
            if (!val) { return false;}
            currentFocus = -1;
            /*create a DIV element that will contain the items (values):*/
            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");
            /*append the DIV element as a child of the autocomplete container:*/
            this.parentNode.appendChild(a);
            /*for each item in the array...*/
            for (i = 0; i < arr.length; i++) {
              /*check if the item starts with the same letters as the text field value:*/
              if (arr[i].toUpperCase().includes(val.toUpperCase())) {
                /*create a DIV element for each matching element:*/
                b = document.createElement("DIV");
                /*make the matching letters bold:*/
                b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                b.innerHTML += arr[i].substr(val.length);
                /*insert a input field that will hold the current array item's value:*/
                b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                /*execute a function when someone clicks on the item value (DIV element):*/
                b.addEventListener("click", function(e) {
                    /*insert the value for the autocomplete text field:*/
                    inp.value = this.getElementsByTagName("input")[0].value;
                    /*close the list of autocompleted values,
                    (or any other open lists of autocompleted values:*/
                    closeAllLists();
                });
                a.appendChild(b);
              }
            }
        });
        /*execute a function presses a key on the keyboard:*/
        inp.addEventListener("keydown", function(e) {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40) {
              /*If the arrow DOWN key is pressed,
              increase the currentFocus variable:*/
              currentFocus++;
              /*and and make the current item more visible:*/
              addActive(x);
            } else if (e.keyCode == 38) { //up
              /*If the arrow UP key is pressed,
              decrease the currentFocus variable:*/
              currentFocus--;
              /*and and make the current item more visible:*/
              addActive(x);
            } else if (e.keyCode == 13) {
              /*If the ENTER key is pressed, prevent the form from being submitted,*/
              e.preventDefault();
              if (currentFocus > -1) {
                /*and simulate a click on the "active" item:*/
                if (x) x[currentFocus].click();
              }
            }
        });
        function addActive(x) {
          /*a function to classify an item as "active":*/
          if (!x) return false;
          /*start by removing the "active" class on all items:*/
          removeActive(x);
          if (currentFocus >= x.length) currentFocus = 0;
          if (currentFocus < 0) currentFocus = (x.length - 1);
          /*add class "autocomplete-active":*/
          x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x) {
          /*a function to remove the "active" class from all autocomplete items:*/
          for (var i = 0; i < x.length; i++) {
            x[i].classList.remove("autocomplete-active");
          }
        }
        function closeAllLists(elmnt) {
          /*close all autocomplete lists in the document,
          except the one passed as an argument:*/
          var x = document.getElementsByClassName("autocomplete-items");
          for (var i = 0; i < x.length; i++) {
            if (elmnt != x[i] && elmnt != inp) {
              x[i].parentNode.removeChild(x[i]);
            }
          }
        }
        /*execute a function when someone clicks in the document:*/
        document.addEventListener("click", function (e) {
            closeAllLists(e.target);
        });
      }


      autocomplete(document.getElementById("searchInput"), subjectName);
            });
    </script>
  </body>
</html>
